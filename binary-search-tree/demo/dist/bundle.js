!function(g){var I={};function C(A){if(I[A])return I[A].exports;var e=I[A]={i:A,l:!1,exports:{}};return g[A].call(e.exports,e,e.exports,C),e.l=!0,e.exports}C.m=g,C.c=I,C.d=function(g,I,A){C.o(g,I)||Object.defineProperty(g,I,{configurable:!1,enumerable:!0,get:A})},C.r=function(g){Object.defineProperty(g,"__esModule",{value:!0})},C.n=function(g){var I=g&&g.__esModule?function(){return g.default}:function(){return g};return C.d(I,"a",I),I},C.o=function(g,I){return Object.prototype.hasOwnProperty.call(g,I)},C.p="",C(C.s=1)}([function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nclass TreeNode {\n    constructor(data) {\n        this.data = data;\n        this.amount = 1;\n        this.left = undefined;\n        this.right = undefined;\n    }\n    equals(obj) {\n        /* Checks whether an equals function exists in the object. If it doesnt,\n        tries to use === operator to perform equality check instead. */\n        if (this.data.equals)\n            return this.data.equals(obj.data);\n        else\n            return this.data === obj.data;\n    }\n    greaterThan(obj) {\n        /* Checks whether an greaterThan function exists in the object. If it doesnt,\n        tries to use > operator to check if this.data is greater than obj.data */\n        if (this.data.greaterThan)\n            return this.data.greaterThan(obj.data);\n        else\n            return this.data > obj.data;\n    }\n}\nclass BinarySearchTree {\n    constructor() {\n        this.root = undefined;\n        this.size = 0;\n    }\n    getSize() {\n        return this.size;\n    }\n    clear() {\n        this.root = undefined;\n        this.size = 0;\n    }\n    count(value) {\n        let element = this.findRef(value)[0];\n        if (element)\n            return element.amount;\n        else\n            return 0;\n    }\n    valuesGen() {\n        function* helper(curNode) {\n            if (curNode) {\n                yield* helper(curNode.left);\n                for (let i = 0; i < curNode.amount; ++i)\n                    yield curNode.data;\n                yield* helper(curNode.right);\n            }\n        }\n        return helper(this.root);\n    }\n    valuesList() {\n        /* Returns a list of elements stored in the tree in crescent order at each\n        iteration. It\'s done by implementing Morris Inorder Tree Traversal Algorithm. */\n        let values = [];\n        let curNode = this.root;\n        while (curNode) {\n            if (!curNode.left) {\n                for (let i = 0; i < curNode.amount; ++i)\n                    values.push(curNode.data);\n                curNode = curNode.right;\n            }\n            else {\n                let pre = curNode.left;\n                while (pre.right && pre.right !== curNode)\n                    pre = pre.right;\n                if (pre.right == curNode) {\n                    for (let i = 0; i < curNode.amount; ++i)\n                        values.push(curNode.data);\n                    pre.right = undefined;\n                    curNode = curNode.right;\n                }\n                else {\n                    pre.right = curNode;\n                    curNode = curNode.left;\n                }\n            }\n        }\n        return values;\n    }\n    insert(value) {\n        let newNode = new TreeNode(value);\n        if (!this.root) {\n            this.root = newNode;\n        }\n        else {\n            let currentNode = this.root;\n            while (true) {\n                if (newNode.greaterThan(currentNode)) {\n                    if (currentNode.right)\n                        currentNode = currentNode.right;\n                    else {\n                        currentNode.right = newNode;\n                        break;\n                    }\n                }\n                else if (newNode.equals(currentNode)) {\n                    ++currentNode.amount;\n                    break;\n                }\n                else {\n                    if (currentNode.left)\n                        currentNode = currentNode.left;\n                    else {\n                        currentNode.left = newNode;\n                        break;\n                    }\n                }\n            }\n        }\n        ++this.size;\n    }\n    findRef(value) {\n        let seekedValue = new TreeNode(value);\n        let curNode = this.root;\n        let curParent;\n        curParent = undefined;\n        while (curNode) {\n            if (seekedValue.equals(curNode))\n                return [curNode, curParent];\n            else {\n                curParent = curNode;\n                if (seekedValue.greaterThan(curNode))\n                    curNode = curNode.right;\n                else\n                    curNode = curNode.left;\n            }\n        }\n        return [undefined, undefined];\n    }\n    find(value) {\n        let found = this.findRef(value)[0];\n        return found ? true : false;\n    }\n    remove(value) {\n        let curNode;\n        let parent;\n        [curNode, parent] = this.findRef(value);\n        if (!curNode && !parent)\n            return false;\n        if (curNode) {\n            if (curNode.amount > 1)\n                --curNode.amount;\n            else if (!curNode.right && !curNode.left) {\n                if (parent) {\n                    if (curNode.greaterThan)\n                        curNode.greaterThan(parent) ? parent.right = undefined : parent.left = undefined;\n                }\n                else\n                    this.root = undefined;\n            }\n            else if (!curNode.left || !curNode.right) {\n                let child = curNode.left || curNode.right;\n                if (parent) {\n                    if (curNode.greaterThan)\n                        curNode.greaterThan(parent) ? parent.right = child : parent.left = child;\n                }\n                else\n                    this.root = child;\n            }\n            else {\n                let candidateParent = curNode;\n                let candidate = curNode.left;\n                while (candidate.right) {\n                    candidateParent = candidate;\n                    candidate = candidate.right;\n                }\n                if (candidate.left)\n                    candidateParent.left = candidate.left;\n                if (curNode.left.equals) {\n                    if (!curNode.left.equals(candidate))\n                        candidate.left = curNode.left;\n                }\n                candidate.right = curNode.right;\n                if (parent)\n                    curNode.greaterThan(parent) ? parent.right = candidate : parent.left = candidate;\n                else\n                    this.root = candidate;\n            }\n            --this.size;\n            return true;\n        }\n        return false;\n    }\n}\nexports.BinarySearchTree = BinarySearchTree;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9iaW5hcnktc2VhcmNoLXRyZWUvQmluYXJ5U2VhcmNoVHJlZS50cz84Y2E0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQixvQkFBb0I7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0Isb0JBQW9CO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsb0JBQW9CO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNsYXNzIFRyZWVOb2RlIHtcbiAgICBjb25zdHJ1Y3RvcihkYXRhKSB7XG4gICAgICAgIHRoaXMuZGF0YSA9IGRhdGE7XG4gICAgICAgIHRoaXMuYW1vdW50ID0gMTtcbiAgICAgICAgdGhpcy5sZWZ0ID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLnJpZ2h0ID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBlcXVhbHMob2JqKSB7XG4gICAgICAgIC8qIENoZWNrcyB3aGV0aGVyIGFuIGVxdWFscyBmdW5jdGlvbiBleGlzdHMgaW4gdGhlIG9iamVjdC4gSWYgaXQgZG9lc250LFxuICAgICAgICB0cmllcyB0byB1c2UgPT09IG9wZXJhdG9yIHRvIHBlcmZvcm0gZXF1YWxpdHkgY2hlY2sgaW5zdGVhZC4gKi9cbiAgICAgICAgaWYgKHRoaXMuZGF0YS5lcXVhbHMpXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5kYXRhLmVxdWFscyhvYmouZGF0YSk7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmRhdGEgPT09IG9iai5kYXRhO1xuICAgIH1cbiAgICBncmVhdGVyVGhhbihvYmopIHtcbiAgICAgICAgLyogQ2hlY2tzIHdoZXRoZXIgYW4gZ3JlYXRlclRoYW4gZnVuY3Rpb24gZXhpc3RzIGluIHRoZSBvYmplY3QuIElmIGl0IGRvZXNudCxcbiAgICAgICAgdHJpZXMgdG8gdXNlID4gb3BlcmF0b3IgdG8gY2hlY2sgaWYgdGhpcy5kYXRhIGlzIGdyZWF0ZXIgdGhhbiBvYmouZGF0YSAqL1xuICAgICAgICBpZiAodGhpcy5kYXRhLmdyZWF0ZXJUaGFuKVxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGF0YS5ncmVhdGVyVGhhbihvYmouZGF0YSk7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmRhdGEgPiBvYmouZGF0YTtcbiAgICB9XG59XG5jbGFzcyBCaW5hcnlTZWFyY2hUcmVlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5yb290ID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLnNpemUgPSAwO1xuICAgIH1cbiAgICBnZXRTaXplKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zaXplO1xuICAgIH1cbiAgICBjbGVhcigpIHtcbiAgICAgICAgdGhpcy5yb290ID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLnNpemUgPSAwO1xuICAgIH1cbiAgICBjb3VudCh2YWx1ZSkge1xuICAgICAgICBsZXQgZWxlbWVudCA9IHRoaXMuZmluZFJlZih2YWx1ZSlbMF07XG4gICAgICAgIGlmIChlbGVtZW50KVxuICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnQuYW1vdW50O1xuICAgICAgICBlbHNlXG4gICAgICAgICAgICByZXR1cm4gMDtcbiAgICB9XG4gICAgdmFsdWVzR2VuKCkge1xuICAgICAgICBmdW5jdGlvbiogaGVscGVyKGN1ck5vZGUpIHtcbiAgICAgICAgICAgIGlmIChjdXJOb2RlKSB7XG4gICAgICAgICAgICAgICAgeWllbGQqIGhlbHBlcihjdXJOb2RlLmxlZnQpO1xuICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY3VyTm9kZS5hbW91bnQ7ICsraSlcbiAgICAgICAgICAgICAgICAgICAgeWllbGQgY3VyTm9kZS5kYXRhO1xuICAgICAgICAgICAgICAgIHlpZWxkKiBoZWxwZXIoY3VyTm9kZS5yaWdodCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGhlbHBlcih0aGlzLnJvb3QpO1xuICAgIH1cbiAgICB2YWx1ZXNMaXN0KCkge1xuICAgICAgICAvKiBSZXR1cm5zIGEgbGlzdCBvZiBlbGVtZW50cyBzdG9yZWQgaW4gdGhlIHRyZWUgaW4gY3Jlc2NlbnQgb3JkZXIgYXQgZWFjaFxuICAgICAgICBpdGVyYXRpb24uIEl0J3MgZG9uZSBieSBpbXBsZW1lbnRpbmcgTW9ycmlzIElub3JkZXIgVHJlZSBUcmF2ZXJzYWwgQWxnb3JpdGhtLiAqL1xuICAgICAgICBsZXQgdmFsdWVzID0gW107XG4gICAgICAgIGxldCBjdXJOb2RlID0gdGhpcy5yb290O1xuICAgICAgICB3aGlsZSAoY3VyTm9kZSkge1xuICAgICAgICAgICAgaWYgKCFjdXJOb2RlLmxlZnQpIHtcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGN1ck5vZGUuYW1vdW50OyArK2kpXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlcy5wdXNoKGN1ck5vZGUuZGF0YSk7XG4gICAgICAgICAgICAgICAgY3VyTm9kZSA9IGN1ck5vZGUucmlnaHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBsZXQgcHJlID0gY3VyTm9kZS5sZWZ0O1xuICAgICAgICAgICAgICAgIHdoaWxlIChwcmUucmlnaHQgJiYgcHJlLnJpZ2h0ICE9PSBjdXJOb2RlKVxuICAgICAgICAgICAgICAgICAgICBwcmUgPSBwcmUucmlnaHQ7XG4gICAgICAgICAgICAgICAgaWYgKHByZS5yaWdodCA9PSBjdXJOb2RlKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY3VyTm9kZS5hbW91bnQ7ICsraSlcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlcy5wdXNoKGN1ck5vZGUuZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgIHByZS5yaWdodCA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICAgICAgY3VyTm9kZSA9IGN1ck5vZGUucmlnaHQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBwcmUucmlnaHQgPSBjdXJOb2RlO1xuICAgICAgICAgICAgICAgICAgICBjdXJOb2RlID0gY3VyTm9kZS5sZWZ0O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdmFsdWVzO1xuICAgIH1cbiAgICBpbnNlcnQodmFsdWUpIHtcbiAgICAgICAgbGV0IG5ld05vZGUgPSBuZXcgVHJlZU5vZGUodmFsdWUpO1xuICAgICAgICBpZiAoIXRoaXMucm9vdCkge1xuICAgICAgICAgICAgdGhpcy5yb290ID0gbmV3Tm9kZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGxldCBjdXJyZW50Tm9kZSA9IHRoaXMucm9vdDtcbiAgICAgICAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgICAgICAgICAgaWYgKG5ld05vZGUuZ3JlYXRlclRoYW4oY3VycmVudE5vZGUpKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjdXJyZW50Tm9kZS5yaWdodClcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnROb2RlID0gY3VycmVudE5vZGUucmlnaHQ7XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudE5vZGUucmlnaHQgPSBuZXdOb2RlO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAobmV3Tm9kZS5lcXVhbHMoY3VycmVudE5vZGUpKSB7XG4gICAgICAgICAgICAgICAgICAgICsrY3VycmVudE5vZGUuYW1vdW50O1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjdXJyZW50Tm9kZS5sZWZ0KVxuICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudE5vZGUgPSBjdXJyZW50Tm9kZS5sZWZ0O1xuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnROb2RlLmxlZnQgPSBuZXdOb2RlO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgKyt0aGlzLnNpemU7XG4gICAgfVxuICAgIGZpbmRSZWYodmFsdWUpIHtcbiAgICAgICAgbGV0IHNlZWtlZFZhbHVlID0gbmV3IFRyZWVOb2RlKHZhbHVlKTtcbiAgICAgICAgbGV0IGN1ck5vZGUgPSB0aGlzLnJvb3Q7XG4gICAgICAgIGxldCBjdXJQYXJlbnQ7XG4gICAgICAgIGN1clBhcmVudCA9IHVuZGVmaW5lZDtcbiAgICAgICAgd2hpbGUgKGN1ck5vZGUpIHtcbiAgICAgICAgICAgIGlmIChzZWVrZWRWYWx1ZS5lcXVhbHMoY3VyTm9kZSkpXG4gICAgICAgICAgICAgICAgcmV0dXJuIFtjdXJOb2RlLCBjdXJQYXJlbnRdO1xuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgY3VyUGFyZW50ID0gY3VyTm9kZTtcbiAgICAgICAgICAgICAgICBpZiAoc2Vla2VkVmFsdWUuZ3JlYXRlclRoYW4oY3VyTm9kZSkpXG4gICAgICAgICAgICAgICAgICAgIGN1ck5vZGUgPSBjdXJOb2RlLnJpZ2h0O1xuICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAgY3VyTm9kZSA9IGN1ck5vZGUubGVmdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gW3VuZGVmaW5lZCwgdW5kZWZpbmVkXTtcbiAgICB9XG4gICAgZmluZCh2YWx1ZSkge1xuICAgICAgICBsZXQgZm91bmQgPSB0aGlzLmZpbmRSZWYodmFsdWUpWzBdO1xuICAgICAgICByZXR1cm4gZm91bmQgPyB0cnVlIDogZmFsc2U7XG4gICAgfVxuICAgIHJlbW92ZSh2YWx1ZSkge1xuICAgICAgICBsZXQgY3VyTm9kZTtcbiAgICAgICAgbGV0IHBhcmVudDtcbiAgICAgICAgW2N1ck5vZGUsIHBhcmVudF0gPSB0aGlzLmZpbmRSZWYodmFsdWUpO1xuICAgICAgICBpZiAoIWN1ck5vZGUgJiYgIXBhcmVudClcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgaWYgKGN1ck5vZGUpIHtcbiAgICAgICAgICAgIGlmIChjdXJOb2RlLmFtb3VudCA+IDEpXG4gICAgICAgICAgICAgICAgLS1jdXJOb2RlLmFtb3VudDtcbiAgICAgICAgICAgIGVsc2UgaWYgKCFjdXJOb2RlLnJpZ2h0ICYmICFjdXJOb2RlLmxlZnQpIHtcbiAgICAgICAgICAgICAgICBpZiAocGFyZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjdXJOb2RlLmdyZWF0ZXJUaGFuKVxuICAgICAgICAgICAgICAgICAgICAgICAgY3VyTm9kZS5ncmVhdGVyVGhhbihwYXJlbnQpID8gcGFyZW50LnJpZ2h0ID0gdW5kZWZpbmVkIDogcGFyZW50LmxlZnQgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yb290ID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoIWN1ck5vZGUubGVmdCB8fCAhY3VyTm9kZS5yaWdodCkge1xuICAgICAgICAgICAgICAgIGxldCBjaGlsZCA9IGN1ck5vZGUubGVmdCB8fCBjdXJOb2RlLnJpZ2h0O1xuICAgICAgICAgICAgICAgIGlmIChwYXJlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGN1ck5vZGUuZ3JlYXRlclRoYW4pXG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJOb2RlLmdyZWF0ZXJUaGFuKHBhcmVudCkgPyBwYXJlbnQucmlnaHQgPSBjaGlsZCA6IHBhcmVudC5sZWZ0ID0gY2hpbGQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yb290ID0gY2hpbGQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBsZXQgY2FuZGlkYXRlUGFyZW50ID0gY3VyTm9kZTtcbiAgICAgICAgICAgICAgICBsZXQgY2FuZGlkYXRlID0gY3VyTm9kZS5sZWZ0O1xuICAgICAgICAgICAgICAgIHdoaWxlIChjYW5kaWRhdGUucmlnaHQpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FuZGlkYXRlUGFyZW50ID0gY2FuZGlkYXRlO1xuICAgICAgICAgICAgICAgICAgICBjYW5kaWRhdGUgPSBjYW5kaWRhdGUucmlnaHQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChjYW5kaWRhdGUubGVmdClcbiAgICAgICAgICAgICAgICAgICAgY2FuZGlkYXRlUGFyZW50LmxlZnQgPSBjYW5kaWRhdGUubGVmdDtcbiAgICAgICAgICAgICAgICBpZiAoY3VyTm9kZS5sZWZ0LmVxdWFscykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWN1ck5vZGUubGVmdC5lcXVhbHMoY2FuZGlkYXRlKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbmRpZGF0ZS5sZWZ0ID0gY3VyTm9kZS5sZWZ0O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYW5kaWRhdGUucmlnaHQgPSBjdXJOb2RlLnJpZ2h0O1xuICAgICAgICAgICAgICAgIGlmIChwYXJlbnQpXG4gICAgICAgICAgICAgICAgICAgIGN1ck5vZGUuZ3JlYXRlclRoYW4ocGFyZW50KSA/IHBhcmVudC5yaWdodCA9IGNhbmRpZGF0ZSA6IHBhcmVudC5sZWZ0ID0gY2FuZGlkYXRlO1xuICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yb290ID0gY2FuZGlkYXRlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLS10aGlzLnNpemU7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuZXhwb3J0cy5CaW5hcnlTZWFyY2hUcmVlID0gQmluYXJ5U2VhcmNoVHJlZTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///0\n')},function(module,exports,__webpack_require__){"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BinarySearchTree_1 = __webpack_require__(0);\nlet tree = new BinarySearchTree_1.BinarySearchTree();\nlet treeRepr = document.getElementById('treeRepr');\nlet sizeElement = document.getElementById('treeSize');\nfunction refreshScreen() {\n    // Refresh the node counter\n    sizeElement.innerHTML = tree.getSize().toString();\n    // Refresh the tree representation\n    let valuesText = [];\n    for (let value of tree.valuesGen())\n        valuesText.push(value.toString());\n    treeRepr.innerHTML = valuesText.join(' ');\n}\nlet insertButton = document.getElementById('insertButton');\nlet input = document.getElementById('newValueField');\ninsertButton.onclick = function () {\n    tree.insert(parseInt(input.value));\n    refreshScreen();\n};\nlet removeButton = document.getElementById('removeButton');\nremoveButton.onclick = function () {\n    tree.remove(parseInt(input.value));\n    refreshScreen();\n};\nlet clearButton = document.getElementById('clearButton');\nclearButton.onclick = function () {\n    tree.clear();\n    refreshScreen();\n};\nlet searchButton = document.getElementById('searchButton');\nlet otherField = document.getElementById('otherField');\nsearchButton.onclick = function () {\n    let result = tree.find(parseInt(otherField.value));\n    let resultsSpan = document.getElementById('otherResults');\n    let text;\n    text = (result) ? 'Value found' : 'Value not found';\n    resultsSpan.innerHTML = text;\n};\nlet countButton = document.getElementById('countButton');\ncountButton.onclick = function () {\n    let result = tree.count(parseInt(otherField.value));\n    let resultsSpan = document.getElementById('otherResults');\n    resultsSpan.innerHTML = `${result} elements found`;\n};\nrefreshScreen();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9iaW5hcnktc2VhcmNoLXRyZWUvZGVtby9zcmMvaW5kZXgudHM/YjA0MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQixPQUFPO0FBQ3RDO0FBQ0EiLCJmaWxlIjoiMS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgQmluYXJ5U2VhcmNoVHJlZV8xID0gcmVxdWlyZShcIi4uLy4uL0JpbmFyeVNlYXJjaFRyZWVcIik7XG5sZXQgdHJlZSA9IG5ldyBCaW5hcnlTZWFyY2hUcmVlXzEuQmluYXJ5U2VhcmNoVHJlZSgpO1xubGV0IHRyZWVSZXByID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RyZWVSZXByJyk7XG5sZXQgc2l6ZUVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndHJlZVNpemUnKTtcbmZ1bmN0aW9uIHJlZnJlc2hTY3JlZW4oKSB7XG4gICAgLy8gUmVmcmVzaCB0aGUgbm9kZSBjb3VudGVyXG4gICAgc2l6ZUVsZW1lbnQuaW5uZXJIVE1MID0gdHJlZS5nZXRTaXplKCkudG9TdHJpbmcoKTtcbiAgICAvLyBSZWZyZXNoIHRoZSB0cmVlIHJlcHJlc2VudGF0aW9uXG4gICAgbGV0IHZhbHVlc1RleHQgPSBbXTtcbiAgICBmb3IgKGxldCB2YWx1ZSBvZiB0cmVlLnZhbHVlc0dlbigpKVxuICAgICAgICB2YWx1ZXNUZXh0LnB1c2godmFsdWUudG9TdHJpbmcoKSk7XG4gICAgdHJlZVJlcHIuaW5uZXJIVE1MID0gdmFsdWVzVGV4dC5qb2luKCcgJyk7XG59XG5sZXQgaW5zZXJ0QnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2luc2VydEJ1dHRvbicpO1xubGV0IGlucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ25ld1ZhbHVlRmllbGQnKTtcbmluc2VydEJ1dHRvbi5vbmNsaWNrID0gZnVuY3Rpb24gKCkge1xuICAgIHRyZWUuaW5zZXJ0KHBhcnNlSW50KGlucHV0LnZhbHVlKSk7XG4gICAgcmVmcmVzaFNjcmVlbigpO1xufTtcbmxldCByZW1vdmVCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVtb3ZlQnV0dG9uJyk7XG5yZW1vdmVCdXR0b24ub25jbGljayA9IGZ1bmN0aW9uICgpIHtcbiAgICB0cmVlLnJlbW92ZShwYXJzZUludChpbnB1dC52YWx1ZSkpO1xuICAgIHJlZnJlc2hTY3JlZW4oKTtcbn07XG5sZXQgY2xlYXJCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2xlYXJCdXR0b24nKTtcbmNsZWFyQnV0dG9uLm9uY2xpY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgdHJlZS5jbGVhcigpO1xuICAgIHJlZnJlc2hTY3JlZW4oKTtcbn07XG5sZXQgc2VhcmNoQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NlYXJjaEJ1dHRvbicpO1xubGV0IG90aGVyRmllbGQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnb3RoZXJGaWVsZCcpO1xuc2VhcmNoQnV0dG9uLm9uY2xpY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgbGV0IHJlc3VsdCA9IHRyZWUuZmluZChwYXJzZUludChvdGhlckZpZWxkLnZhbHVlKSk7XG4gICAgbGV0IHJlc3VsdHNTcGFuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ290aGVyUmVzdWx0cycpO1xuICAgIGxldCB0ZXh0O1xuICAgIHRleHQgPSAocmVzdWx0KSA/ICdWYWx1ZSBmb3VuZCcgOiAnVmFsdWUgbm90IGZvdW5kJztcbiAgICByZXN1bHRzU3Bhbi5pbm5lckhUTUwgPSB0ZXh0O1xufTtcbmxldCBjb3VudEJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb3VudEJ1dHRvbicpO1xuY291bnRCdXR0b24ub25jbGljayA9IGZ1bmN0aW9uICgpIHtcbiAgICBsZXQgcmVzdWx0ID0gdHJlZS5jb3VudChwYXJzZUludChvdGhlckZpZWxkLnZhbHVlKSk7XG4gICAgbGV0IHJlc3VsdHNTcGFuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ290aGVyUmVzdWx0cycpO1xuICAgIHJlc3VsdHNTcGFuLmlubmVySFRNTCA9IGAke3Jlc3VsdH0gZWxlbWVudHMgZm91bmRgO1xufTtcbnJlZnJlc2hTY3JlZW4oKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1\n")}]);